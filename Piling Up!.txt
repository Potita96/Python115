//There is a horizontal row of n cubes. The length of each cube is given. You need to create a new vertical pile of cubes. The new pile should follow these directions: if cube[i] is on top of cube[j] then sideLength[j] >= sideLength[i].

When stacking the cubes, you can only pick up either the leftmost or the rightmost cube each time. Print "Yes" if it is possible to stack the cubes. Otherwise, print "No". 

Example
blocks=[1,2,3,8,7]

Result: No

After choosing the rightmost element,7, choose the leftmost element,1 . After than, the choices are 2 and 8. These are both larger than the top block of size 1.

blocks=[1,2,3,7,8]

Result: Yes

Choose blocks from right to left in order to successfully stack the blocks.//






CODE:
from collections import deque

t = int(input())
for i in range(t):
    size = int(input())
    top = 2**31
    d = deque(list(map(int,input().split())))
    for j in range(len(d)):
        if d[0]>=d[len(d)-1] and d[0]<=top:
            top = d.popleft()
        elif d[len(d)-1]<=top:
            top = d.pop()
        else:
            print('No')
            break
    if len(d) == 0:
        print('Yes')
        




Input (stdin)
2
6
4 3 2 1 3 4
3
1 3 2
Expected Output
Yes
No

